spring.application.name=understand-flyway
logging.level.root[0]=warn
logging.level.root[1]=debug
spring.main.banner-mode=off
spring.config.import=classpath:info/my_info.properties
# Just instead @RequestMapping(value="/api")
server.servlet.contextPath=/api

spring.datasource.url=${MYSQL_URL}
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}
spring.datasource.driver-class-name=${MYSQL_DRIVER}
spring.jpa.show-sql=true

### We can config migration file name in db.migration by prop below (** Note we can run flyway by using CLI  or Using Flyway Desktop)
# spring.flyway.sql-migration-prefix=T
# spring.flyway.sql-migration-separator=--
# spring.flyway.sql-migration-suffixes=.blog
### result will be T1.0--create_users_table.blog

### Sometimes we may need to disable Flyway migrations under certain circumstances.
### For example, it?s common practice to generate database schema based on the entities during tests.
### In such a situation, we can disable Flyway under the test profile.
### (it won run migration files)
# spring.flyway.enabled=false